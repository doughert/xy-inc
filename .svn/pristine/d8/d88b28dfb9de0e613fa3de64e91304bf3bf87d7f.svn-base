package br.org.iamar.sgci;

import javax.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories( entityManagerFactoryRef = "entityManagerFactory", basePackages = { "br.org.iamar.vqe.repository" } )
public class VQEDatabaseConfig {
	
	@Bean( name = "vqeDataSource" )
    @ConfigurationProperties( prefix = "vqe.datasource" )
    public DataSource barDataSource() {

        return DataSourceBuilder.create().build();
    }


    @Bean( name = "vqeEntityManagerFactory" )
    public LocalContainerEntityManagerFactoryBean barEntityManagerFactory(
        EntityManagerFactoryBuilder builder,
        @Qualifier( "vqeDataSource" ) DataSource vqeDataSource ) {

        return builder.dataSource( vqeDataSource ).packages( "br.org.iamar.vqe.model" ).persistenceUnit( "vqe" ).build();
    }


    @Bean( name = "vqeTransactionManager" )
    public PlatformTransactionManager carbonTransactionManager( @Qualifier( "vqeEntityManagerFactory" ) EntityManagerFactory vqeEntityManagerFactory ) {

        return new JpaTransactionManager( vqeEntityManagerFactory );
    }

}
