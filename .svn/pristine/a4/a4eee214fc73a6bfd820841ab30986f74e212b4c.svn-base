package br.org.iamar.sgci.service.impl;


import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.org.iamar.sgci.model.Profile;
import br.org.iamar.sgci.model.User;
import br.org.iamar.sgci.model.UserProfile;
import br.org.iamar.sgci.repository.UserProfileCustomRepository;
import br.org.iamar.sgci.repository.UserProfileRepository;
import br.org.iamar.sgci.service.UserProfileService;


@Service
public class UserProfileServiceImpl implements UserProfileService {

    @Autowired
    private UserProfileRepository userProfileRepository;

    @Autowired
    private UserProfileCustomRepository customRepository;
    

    @Override
    public Iterable< Profile > findUserProfilesByUserId( Long userId ) {

        return customRepository.findUserProfilesByUserId( userId );
    }


    @Override
    public void save( User user, Iterable< Profile > selectedProfiles ) {

        Iterable< Profile > oldSelectedProfiles = customRepository.findUserProfilesByUserId( user.getId() );

        Set< Long > oldSelectedProfilesIds = new HashSet< Long >();
        for ( Profile oldSelectedProfile : oldSelectedProfiles ) {
            oldSelectedProfilesIds.add( oldSelectedProfile.getId() );
        }

        for ( Profile selectedProfile : selectedProfiles ) {
            if ( oldSelectedProfilesIds.contains( selectedProfile.getId() ) ) {
                oldSelectedProfilesIds.remove( selectedProfile.getId() );
            } else {

                UserProfile userProfile = new UserProfile();
                userProfile.setUser( user );
                userProfile.setProfile( selectedProfile );

                userProfileRepository.save( userProfile );
            }
        }

        oldSelectedProfilesIds.forEach( ( oldSelectedProfileId ) -> {
            UserProfile userProfile = userProfileRepository.findByUserIdAndProfileId( user.getId(), oldSelectedProfileId );
            userProfileRepository.delete( userProfile.getId() );
        });

    }

}
