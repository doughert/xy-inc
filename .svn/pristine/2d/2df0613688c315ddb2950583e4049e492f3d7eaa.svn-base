package br.org.iamar.sgci.repository.impl;


import org.hibernate.Criteria;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Property;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import br.org.iamar.sgci.model.Feature;
import br.org.iamar.sgci.model.ProfileFeature;
import br.org.iamar.sgci.repository.ProfileFeatureCustomRepository;


@Repository
public class ProfileFeatureCustomRepositoryImpl extends GenericCustomRepositoryImpl< ProfileFeature, Long > implements ProfileFeatureCustomRepository {

    @Override
    @SuppressWarnings( "unchecked" )
    public Iterable< Feature > findProfileFeaturesByProfileId( Long profileId ) {

        DetachedCriteria detachedCriteria = DetachedCriteria.forClass( ProfileFeature.class );
        detachedCriteria.add( Restrictions.eq( "profile.id", profileId ) );
        detachedCriteria.setProjection( Projections.property( "feature.id" ) );

        Criteria criteria = getSession().createCriteria( Feature.class );
        criteria.add( Property.forName( "id" ).in( detachedCriteria ) );

        return criteria.list();
    }

}
